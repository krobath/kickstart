#platform=x86, AMD64, or Intel EM64T
#version=DEVEL
# Firewall configuration
firewall --disabled
# Install OS instead of upgrade
install
# Use CDROM installation media


url --url http://192.168.1.29/oel81
# Root password
rootpw --iscrypted $1$WmKxrlR8$EoRKlhpInteg3CHkB69PT1
# System authorization information
auth  --useshadow  --passalgo=sha512
# Use graphical install
text
firstboot --disable
# System keyboard
keyboard dk
# System language
lang en_US
# SELinux configuration
selinux --permissive
# Installation logging level
logging --level=info

# X Window System configuration information
xconfig  --startxonboot

# System services
services --enabled="chronyd"

# System timezone
timezone Europe/Copenhagen --isUtc
user --groups=wheel --name=krobath --password=$6$id9WWAHmgi.Qa.We$lw4JZ.c5z/5g9hbmcQL9uHiwYl15YrDEhIr3g2KTMfYKfj8h/qgNu7.Iff9egBqZ5.UhcjXnLuY0aCVxH.gOW. --iscrypted --gecos="Henrik Krobath"

# Network information
network  --bootproto=static --device=ens224 --gateway=192.168.1.1 --ip=192.168.1.39 --nameserver=192.168.1.53,192.168.1.54 --netmask=255.255.255.0 --onboot=on 
network  --hostname=web01.krobath.local

# System bootloader configuration
bootloader --location=mbr  --driveorder="sda"

# Partition clearing information
#
# Require X disks
#

clearpart --all --drives=sda,sdb,sdc,sdd,sde,sdf,sdg,sdh,sdi

part /boot --fstype=ext4 --size=500 --ondisk=sda
part pv.pv_01 --grow --size=1 --ondisk=sda
part pv.pv_02 --grow --size=1 --ondisk=sdb
part pv.pv_03 --grow --size=1 --ondisk=sdc
part pv.pv_04 --grow --size=1 --ondisk=sdd
#part pv.pv_05 --grow --size=1 --ondisk=sde

volgroup vg01 --pesize=4096 pv.pv_01
volgroup vg02 --pesize=4096 pv.pv_02
volgroup vg03 --pesize=4096 pv.pv_03
volgroup vg04 --pesize=4096 pv.pv_04
#volgroup vg05 --pesize=4096 pv.pv_05

# Create lvol for / 30GB
logvol / --fstype=ext4 --name=lv_root --vgname=vg01 --grow --size=30720 --maxsize=30720

# Create lvol for swap 16GB
logvol swap --name=lv_swap --vgname=vg01 --grow --size=8192 --maxsize=8192

# Create lvol for /software 64GB
logvol /software --fstype=ext4 --name=lv_software --vgname=vg02 --grow --size=16384 --maxsize=16384

# Create lvol for /data 16GB
logvol /data --fstype=ext4 --name=lv_data --vgname=vg03 --grow --size=16384 --maxsize=16384

# Create lvol for /oradata 70GB (Mandatory for hosts with Oracle DB on FS)
#logvol /oradata --fstype=ext4 --name=lv_data --vgname=vg04 --grow --size=16384--maxsize=16384

# Create lvol for /oradata 16GB (Mandatory for hosts with PosgresSQL DB on FS)
logvol /pgdata --fstype=ext4 --name=lv_pgdata --vgname=vg04 --grow --size=16384 --maxsize=16384


%packages
@^graphical-server-environment
@file-server
@network-file-system-client
@remote-desktop-clients
@remote-system-management
kexec-tools
@compat-libraries
@console-internet
@development
@fonts
@internet-browser
@graphical-admin-tools
@network-tools
@performance
@perl-runtime
@system-admin-tools
@x11
@system-management
lsscsi
gcc
nfs-utils
ksh
dos2unix
%end

#Post-installation script

%post


#
# Install and setup ClamAV
#
#yum install -y clamav clamav-update
dnf install https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm
dnf --enablerepo epel -y install clamav clamav-update

# Update ClamAV definitions
freshclam

#
# Add entries to crontab
#
if [[ $(crontab -l | egrep -v "^(#|$)" | grep -q '/usr/bin/freshclam'; echo $?) == 1 ]]
then
    set -f
    printf "$(crontab -l ; echo '0 10 * * * /usr/bin/freshclam')\n" | crontab -
    set +f
fi

clamdscan --multiscan --fdpass --quiet 
if [[ $(crontab -l | egrep -v "^(#|$)" | grep -q 'clamscan --infected  --recursive --log=/etc/clamav/clamscan.log --exclude-dir=/software --exclude-dir=/data --exclude-dir=/oradata --exclude-dir=/pgdata /'; echo $?) == 1 ]]
then
    set -f
    printf "$(crontab -l ; echo '0 11 * * * clamscan --infected  --recursive --log=/etc/clamav/clamscan.log --exclude-dir=/software --exclude-dir=/data --exclude-dir=/oradata --exclude-dir=/pgdata /')\n" | crontab -
    set +f
fi



# Install 12c preinstall
#yum install -y oracle-database-server-12cR2-preinstall
#dnf install -y oracle-database-preinstall-19c


#
# Open firewall ports
#
# Open TCP/22 for all
firewall-cmd --zone=public --add-port=22/tcp --permanent
firewall-cmd --reload


#
# Setup remote syslog to Splunk
#
echo "*.*	@192.168.1.26:514" >> /etc/rsyslog.conf
systemctl rsyslog restart



#
# Install chrony (NTP) OEL8
#
dnf install -y chrony

systemctl start chronyd
systemctl status chronyd
systemctl enable chronyd

# Set timezone
timedatectl set-timezone Europe/Copenhagen

# Install required UTF8 locale
localedef -i en_US -f UTF-8 en_US.UTF-8

dnf install nfs-utils
dnf install nfs-utils nfs4-acl-tools

#
# Update fstab to mount /shared
#
mkdir /shared
chmod 777 /shared
echo "192.168.1.18:/mnt/ZPOOL01/shared_dataset       /shared   nfs     defaults      0       0" >> /etc/fstab
mount /shared

#
# Create partitions
#
#echo -e "o\nn\np\n1\n\n\nw" | fdisk /dev/sdf
#echo -e "o\nn\np\n1\n\n\nw" | fdisk /dev/sdg
#echo -e "o\nn\np\n1\n\n\nw" | fdisk /dev/sdh
#echo -e "o\nn\np\n1\n\n\nw" | fdisk /dev/sdi

# Create required groups
#groupadd -g 54321 oinstall
#groupadd -g 54322 dba
#groupadd -g 54323 oper
#groupadd -g 54324 backupdba
#groupadd -g 54325 dgdba
#groupadd -g 54326 kmdba
#groupadd -g 54327 asmdba
#groupadd -g 54328 asmoper
#groupadd -g 54329 asmadmin
#groupadd -g 54330 oper



#
# Setup Oracle ASM
#
# Create grid user
#useradd -u 54320 -g oinstall -G asmadmin,asmdba,asmoper grid

# Set grid user password
#echo zaq12wsx | passwd --stdin grid

# Add users to sudoers file
#echo "grid       ALL=(ALL)       ALL" >> /etc/sudoers



#
# Setup Oracle Database
#
# Create oracle user
#useradd -u 54322 -g oinstall -G dba,asmdba oracle (Already created by installing oracle-database-server-12cR2-preinstall)
#usermod -u 54322 -g oinstall -G dba,asmdba,oper oracle

# Set oracle user password
echo zaq12wsx | passwd --stdin oracle

# Add users to sudoers file
echo "krobath       ALL=(ALL)       ALL" >> /etc/sudoers


#
# Setup Oracle Weblogic
#

# Install Java
dnf install java-11-openjdk-devel


#
# Setup Wildfly
#


# Create wildfly user and group
groupadd -r wildfly
useradd -r -g wildfly -d /opt/wildfly -s /sbin/nologin wildfly

# Download and install wildfly
wget https://download.jboss.org/wildfly/19.0.0.Final/wildfly-19.0.0.Final.tar.gz -P /tmp

tar xf /tmp/wildfly-19.0.0.Final.tar.gz -C /opt/

ln -s /opt/wildfly-19.0.0.Final /opt/wildfly

chown -RH wildfly: /opt/wildfly

#
# Wildfly configuration
#
mkdir -p /etc/wildfly
cp /opt/wildfly/docs/contrib/scripts/systemd/wildfly.conf /etc/wildfly/

cp /opt/wildfly/docs/contrib/scripts/systemd/launch.sh /opt/wildfly/bin/

sh -c 'chmod +x /opt/wildfly/bin/*.sh'

cp /opt/wildfly/docs/contrib/scripts/systemd/wildfly.service/ etc/systemd/system/

#
# Add custom configuration here
#
#
#
#

# Enable automatic startup
systemctl daemon-reload
systemctl start wildfly
systemctl enable wildfly

# Open firewall 
firewall-cmd --zone=public --permanent --add-port=8080/tcp



#
# Setup Tomcat
#
sudo groupadd --system tomcat
sudo useradd -d /usr/share/tomcat -r -s /bin/false -g tomcat tomcat

sudo yum -y install wget
export VER="9.0.37"
wget https://archive.apache.org/dist/tomcat/tomcat-9/v${VER}/bin/apache-tomcat-${VER}.tar.gz

sudo tar xvf apache-tomcat-${VER}.tar.gz -C /usr/share/

sudo ln -s /usr/share/apache-tomcat-$VER/ /usr/share/tomcat

sudo chown -R tomcat:tomcat /usr/share/tomcat
sudo chown -R tomcat:tomcat /usr/share/apache-tomcat-$VER/ 

echo "[Unit]" >> /etc/systemd/system/tomcat.service
echo "Description=Tomcat Server" >> /etc/systemd/system/tomcat.service
echo "After=syslog.target network.target" >> /etc/systemd/system/tomcat.service
echo "" >> /etc/systemd/system/tomcat.service
echo "[Service]" >> /etc/systemd/system/tomcat.service
echo "Type=forking" >> /etc/systemd/system/tomcat.service
echo "User=tomcat" >> /etc/systemd/system/tomcat.service
echo "Group=tomcat" >> /etc/systemd/system/tomcat.service
echo "" >> /etc/systemd/system/tomcat.service
echo "Environment=JAVA_HOME=/usr/lib/jvm/jre" >> /etc/systemd/system/tomcat.service
echo "Environment='JAVA_OPTS=-Djava.awt.headless=true'" >> /etc/systemd/system/tomcat.service
echo "Environment=CATALINA_HOME=/usr/share/tomcat" >> /etc/systemd/system/tomcat.service
echo "Environment=CATALINA_BASE=/usr/share/tomcat" >> /etc/systemd/system/tomcat.service
echo "Environment=CATALINA_PID=/usr/share/tomcat/temp/tomcat.pid" >> /etc/systemd/system/tomcat.service
echo "Environment='CATALINA_OPTS=-Xms512M -Xmx1024M'" >> /etc/systemd/system/tomcat.service
echo "ExecStart=/usr/share/tomcat/bin/catalina.sh start" >> /etc/systemd/system/tomcat.service
echo "ExecStop=/usr/share/tomcat/bin/catalina.sh stop" >> /etc/systemd/system/tomcat.service
echo "" >> /etc/systemd/system/tomcat.service
echo "[Install]" >> /etc/systemd/system/tomcat.service
echo "WantedBy=multi-user.target" >> /etc/systemd/system/tomcat.service

sudo systemctl daemon-reload
sudo systemctl start tomcat
sudo systemctl enable tomcat

sudo firewall-cmd --permanent --add-port=8080/tcp
sudo firewall-cmd --reload

# Set password
sudo sed -i 's/<must-be-changed>/zaq12wsx/g' /usr/share/tomcat/conf/tomcat-users.xml


#
# Setup nginx
#
sudo yum install epel-release && yum install nginx

sudo systemctl start nginx

sudo systemctl status nginx



# 
# Setup PostgreSQL
#
# Create postgres user
groupadd -g 55321 postgres
useradd -u 55320 -g postgres postgres

# Set oracle user password
echo zaq12wsx | passwd --stdin postgres

# Add users to sudoers file
echo "postgres       ALL=(ALL)       ALL" >> /etc/sudoers

mkdir -p /pgdata/postgres/data
mkdir -p /pgdata/postgres/log
chown postgres:postgres /pgdata/postgres
chown postgres:postgres /pgdata/postgres/data
chown postgres:postgres /pgdata/postgres/log

yum -y install https://download.postgresql.org/pub/repos/yum/reporpms/EL-8-x86_64/pgdg-redhat-repo-latest.noarch.rpm

dnf -qy module disable postgresql
dnf -y install postgresql12 postgresql12-server

su postgres -c 'cd /usr/pgsql-12/bin; ./pg_ctl -D /pgdata/postgres/data initdb'

su postgres -c 'cd /usr/pgsql-12/bin/; ./pg_ctl start -D /pgdata/postgres/data -l /pgdata/postgres/log/serverlog'

su postgres -c 'cd /usr/pgsql-12/bin/; ./pg_ctl stop -D /pgdata/postgres/data -l /pgdata/postgres/log/serverlog'

sudo firewall-cmd --permanent --add-port 5432/tcp
sudo firewall-cmd --reload

sudo -u postgres psql
CREATE TABLESPACE leadmanagertbs01 LOCATION '/pgdata/postgres/tablespaces';

postgres=# create database leadmanagerdb tablespace leadmanagertbs01;
postgres=# create user leadmanageruser with encrypted password 'leadmanagerpwd';
postgres=# grant all privileges on database leadmanagerdb to leadmanageruser;

psql -h 192.168.102.11 -p 5432 -d leadmanagerdb -U leadmanageruser

create table lead
(
	id serial not null,
	name varchar(128) not null,
	address varchar(128) not null,
	zip varchar(8) not null,
	phone_num varchar(20),
	cell1_num varchar(20),
	cell2_num varchar(20),
	house_type varchar(20) not null,
	size_m2 varchar(20) not null,
	expected_type varchar(20) not null,
	gis_interior varchar(4) not null,
	gis_car varchar(4) not null,
	load_timestamp timestamp not null,
	refresh_timestamp timestamp not null,
	constraint lead_pk
		primary key (name, address, zip)
);

alter table lead owner to leadmanageruser;



#
# Run updatedb
#
updatedb


%end