#platform=x86, AMD64, or Intel EM64T
#version=DEVEL
# Firewall configuration
firewall --disabled
# Install OS instead of upgrade
install
# Use http installation media
url --url http://192.168.1.29/oel81
# Root password
rootpw --iscrypted $1$WmKxrlR8$EoRKlhpInteg3CHkB69PT1
# System authorization information
auth  --useshadow  --passalgo=sha512
# Use graphical install
text
firstboot --disable
# System keyboard
keyboard dk
# System language
lang en_US
# SELinux configuration
selinux --permissive
# Installation logging level
logging --level=info

# X Window System configuration information
xconfig  --startxonboot

# System services
services --enabled="chronyd"

# System timezone
timezone Europe/Copenhagen --isUtc
user --groups=wheel --name=krobath --password=$6$id9WWAHmgi.Qa.We$lw4JZ.c5z/5g9hbmcQL9uHiwYl15YrDEhIr3g2KTMfYKfj8h/qgNu7.Iff9egBqZ5.UhcjXnLuY0aCVxH.gOW. --iscrypted --gecos="Henrik Krobath"

# Network information
# Network information
network  --bootproto=static --device=ens224 --gateway=192.168.1.1 --ip=192.168.1.26 --nameserver=192.168.1.53,192.168.1.54 --netmask=255.255.255.0 --onboot=on 
network  --hostname=elk01.krobath.local

# System bootloader configuration
bootloader --location=mbr  --driveorder="sda"

# Partition clearing information
#
# Require X disks
#

clearpart --all --drives=sda,sdb,sdc,sdd,sde

part /boot --fstype=xfs --size=500 --ondisk=sda
part pv.pv_01 --grow --size=1 --ondisk=sda
part pv.pv_02 --grow --size=1 --ondisk=sdb
part pv.pv_03 --grow --size=1 --ondisk=sdc
part pv.pv_04 --grow --size=1 --ondisk=sdd
part pv.pv_05 --grow --size=1 --ondisk=sde

volgroup vg01 --pesize=4096 pv.pv_01
volgroup vg02 --pesize=4096 pv.pv_02
volgroup vg03 --pesize=4096 pv.pv_03
volgroup vg04 --pesize=4096 pv.pv_04
volgroup vg05 --pesize=4096 pv.pv_05

# Create lvol for / 30GB
logvol / --fstype=xfs --name=lv_root --vgname=vg01 --grow --size=20480 --maxsize=65536

# Create lvol for swap 16GB
logvol swap --name=lv_swap --vgname=vg01 --grow --size=8192 --maxsize=16384

# Create lvol for /var/lib 64GB
logvol /var/lib --fstype=xfs --name=lv_var_lib --vgname=vg02 --grow --size=65536 --maxsize=65536

# Create lvol for /var/logs 16GB
logvol /var/logs --fstype=xfs --name=lv_var_logs --vgname=vg03 --grow --size=16384 --maxsize=65536

# Create lvol for /data 64GB (Mandatory for hosts with Oracle DB on FS)
logvol /data --fstype=xfs --name=lv_data --vgname=vg04 --grow --size=16384 --maxsize=65536

# Create lvol for /pgdata 16GB (Mandatory for hosts with PosgresSQL DB on FS)
logvol /pgdata --fstype=xfs --name=lv_pgdata --vgname=vg05 --grow --size=4096 --maxsize=65536


%packages
@^graphical-server-environment
@file-server
@network-file-system-client
@remote-desktop-clients
@remote-system-management
@smb-server
kexec-tools
@development
@fonts
@internet-browser
@graphical-admin-tools
@network-tools
@performance
lsscsi
gcc
nfs-utils
ksh
dos2unix
%end

#Post-installation script

%post


#
# Install and setup ClamAV
#
#yum install -y clamav clamav-update
dnf install https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm
dnf --enablerepo epel -y install clamav clamav-update

#
# Add entries to crontab
#
if [[ $(crontab -l | egrep -v "^(#|$)" | grep -q '/usr/bin/freshclam'; echo $?) == 1 ]]
then
    set -f
    printf "$(crontab -l ; echo '0 10 * * * /usr/bin/freshclam')\n" | crontab -
    set +f
fi

clamdscan --multiscan --fdpass --quiet 
if [[ $(crontab -l | egrep -v "^(#|$)" | grep -q 'clamscan --infected  --recursive --log=/etc/clamav/clamscan.log --exclude-dir=/software --exclude-dir=/data --exclude-dir=/oradata --exclude-dir=/pgdata /'; echo $?) == 1 ]]
then
    set -f
    printf "$(crontab -l ; echo '0 11 * * * clamscan --infected  --recursive --log=/etc/clamav/clamscan.log --exclude-dir=/software --exclude-dir=/data --exclude-dir=/oradata --exclude-dir=/pgdata /')\n" | crontab -
    set +f
fi


# Disable Redhat 7 firewall
service firewalld stop
systemctl disable firewalld

#
# Setup remote syslog to Splunk
#
echo "*.*	@192.168.1.27:515" >> /etc/rsyslog.conf
systemctl rsyslog restart

#
# Install chrony (NTP) OEL8
#
dnf install -y chrony

systemctl start chronyd
systemctl status chronyd
systemctl enable chronyd

# Set timezone
timedatectl set-timezone Europe/Copenhagen

# Install required UTF8 locale
localedef -i en_US -f UTF-8 en_US.UTF-8


# Update fstab to mount /shared
mkdir /shared
chmod 777 /shared
echo "192.168.1.18:/mnt/ZPOOL01/shared_dataset       /shared   nfs     defaults      0       0" >> /etc/fstab
mount /shared

#
# Install ELK stack
#

# Install Java
yum -y install java

# Import Elastig signing key
rpm --import https://artifacts.elastic.co/GPG-KEY-elasticsearch

# Setup the ElasticSearch repository on ELK server
cat << EOF > /etc/yum.repos.d/elastic.repo
[elasticsearch-7.x]
name=Elasticsearch repository for 7.x packages
baseurl=https://artifacts.elastic.co/packages/oss-7.x/yum
gpgcheck=1
gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch
enabled=1
autorefresh=1
type=rpm-md
EOF


echo "cluster.name: elkstack" >> /etc/elasticsearch/elasticsearch.yml
echo "node.name: elk01.krobath.local" >> /etc/elasticsearch/elasticsearch.yml
echo "network.host: 192.168.1.26" >> /etc/elasticsearch/elasticsearch.yml

echo "discovery.seed_hosts: [\"elk01.krobath.local\"]" >> /etc/elasticsearch/elasticsearch.yml
echo "cluster.initial_master_nodes: [\"elk01.krobath.local\"]" >> /etc/elasticsearch/elasticsearch.yml

echo "192.168.1.26      elk01.krobath.dk        elk01" >> /etc/hosts

systemctl daemon-reload

systemctl enable elasticsearch

systemctl start elasticsearch

# Install logstash
yum -y install logstash-oss


echo "input {" >> /etc/logstash/conf.d/beats.conf
echo "  beats {" >> /etc/logstash/conf.d/beats.conf
echo "    port => 5044" >> /etc/logstash/conf.d/beats.conf
echo "  }" >> /etc/logstash/conf.d/beats.conf
echo "}" >> /etc/logstash/conf.d/beats.conf
echo "" >> /etc/logstash/conf.d/beats.conf
echo "filter {" >> /etc/logstash/conf.d/beats.conf
echo "  if [type] == \"syslog\" {" >> /etc/logstash/conf.d/beats.conf
echo "    grok {" >> /etc/logstash/conf.d/beats.conf
echo "      match => { \"message\" => \"%{SYSLOGLINE}\" }" >> /etc/logstash/conf.d/beats.conf
echo "  }" >> /etc/logstash/conf.d/beats.conf
echo "    date {" >> /etc/logstash/conf.d/beats.conf
echo "      match => [ \"timestamp\", \"MMM  d HH:mm:ss\", \"MMM dd HH:mm:ss\" ]" >> /etc/logstash/conf.d/beats.conf
echo "    }" >> /etc/logstash/conf.d/beats.conf
echo "  }" >> /etc/logstash/conf.d/beats.conf
echo "}" >> /etc/logstash/conf.d/beats.conf
echo "" >> /etc/logstash/conf.d/beats.conf
echo "output {" >> /etc/logstash/conf.d/beats.conf
echo "  elasticsearch {" >> /etc/logstash/conf.d/beats.conf
echo "    hosts => [\"192.168.1.26:9200\"]" >> /etc/logstash/conf.d/beats.conf
echo "    index => \"%{[@metadata][beat]}-%{+YYYY.MM.dd}\"" >> /etc/logstash/conf.d/beats.conf
echo "  }" >> /etc/logstash/conf.d/beats.conf
echo "}" >> /etc/logstash/conf.d/beats.conf



systemctl start logstash

systemctl enable logstash


#
# Install Kibana
#
yum -y install kibana-oss


echo "server.host: \"192.168.1.26\"" >> /etc/kibana/kibana.yml
echo "elasticsearch.hosts: [\"http://192.168.1.26:9200\"]" >> /etc/kibana/kibana.yml

# Start and enable kibana on system startup.

systemctl start kibana
systemctl enable kibana


#
# Install filebeat
#
yum -y install filebeat

cp /etc/filebeat/filebeat.yml /etc/filebeat/filebeat.yml.org

sed 's/localhost:9200/192.168.1.26:5044/g' /etc/filebeat/filebeat.yml > /etc/filebeat/filebeat.yml

/etc/filebeat/filebeat.yml
#
# Open firewall ports
#
firewall-cmd --permanent --add-port=22/tcp
firewall-cmd --permanent --add-port=5044/tcp
firewall-cmd --permanent --add-port=5601/tcp

firewall-cmd --reload
# 
# Setup PostgreSQL
#
# Create postgres user
groupadd -g 55321 postgres
useradd -u 55320 -g oinstall -G postgres postgres

# Set oracle user password
echo zaq12wsx | passwd --stdin postgres

# Add users to sudoers file
echo "postgres       ALL=(ALL)       ALL" >> /etc/sudoers

mkdir -p /pgdata/postgres/data
mkdir -p /pgdata/postgres/log
chown postgres:postgres /pgdata/postgres
chown postgres:postgres /pgdata/postgres/data
chown postgres:postgres /pgdata/postgres/log

yum -y install https://download.postgresql.org/pub/repos/yum/reporpms/EL-8-x86_64/pgdg-redhat-repo-latest.noarch.rpm

dnf -qy module disable postgresql
dnf -y install postgresql12 postgresql12-server

su postgres -c 'cd /usr/pgsql-12/bin; ./pg_ctl -D /pgdata/postgres/data initdb'

su postgres -c 'cd /usr/pgsql-12/bin/; ./pg_ctl start -D /pgdata/postgres/data -l /pgdata/postgres/log/serverlog'



%end